<?php

namespace DummyNamespace;

use DummyFullModelClass;
use App\Http\Requests\DummyRequestClass;

/**
 * DummyClass
 * -----------------------
 * Controller to handle the DummyModelVariable routes.
 * -----------------------
 *
 * @author  Ferdinand Frank
 * @version 1.0
 * @package DummyNamespace
 */
class DummyClass extends Controller {

    /**
     * Displays a listing of all the DummyModelPlural.
     *
     * @return \Illuminate\View\View
     */
    public function index() {
        return view('DummyModelVariable.index');
    }

    /**
     * Displays the specified DummyModelVariable.
     *
     * @param DummyModelClass $DummyModelVariable
     *
     * @return \Illuminate\View\View
     */
    public function show(DummyModelClass $DummyModelVariable) {
        if (\Gate::denies('view', $DummyModelVariable)) {
            abort(404, 'Page not found.');
        }

        return view('DummyModelVariable.show', compact('DummyModelVariable'));
    }

    /**
     * Shows the form for creating a new DummyModelVariable.
     *
     * @return \Illuminate\View\View
     */
    public function create() {
        if (\Gate::denies('create', DummyModelClass::class)) {
            abort(404, 'Page not found.');
        }

        $DummyModelVariable = new DummyModelClass();
        $isEditPage = false;

        return view('DummyModelVariable.edit', compact('DummyModelVariable', 'isEditPage'));
    }

    /**
     * Shows the form for editing the specified DummyModelVariable.
     *
     * @param DummyModelClass $DummyModelVariable
     *
     * @return \Illuminate\View\View
     */
    public function edit(DummyModelClass $DummyModelVariable) {
        if (\Gate::denies('update', $DummyModelVariable)) {
            abort(404, 'Page not found.');
        }

        $isEditPage = true;

        return view('DummyModelVariable.edit', compact('DummyModelVariable', 'isEditPage'));
    }

    /**
     * Creates a new DummyModelVariable with the data from the specified request and
     * stores the data in the database.
     *
     * @param  DummyRequestClass $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(DummyRequestClass $request) {
        if (\Gate::denies('create', DummyModelClass::class)) {
            abort(403);
        }

        $DummyModelVariable = DummyModelClass::create($request->all());

        return response()->json($DummyModelVariable, empty($DummyModelVariable) ? 500 : 200);
    }

    /**
     * Updates the specified DummyModelVariable with the specified request data in the database.
     *
     * @param DummyRequestClass $request
     * @param DummyModelClass $DummyModelVariable
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(DummyRequestClass $request, DummyModelClass $DummyModelVariable) {
        if (\Gate::denies('update', $DummyModelVariable)) {
            abort(403);
        }

        if ($DummyModelVariable->update($request->all())) {
            return response()->json($DummyModelVariable);
        }

        return response()->json($DummyModelVariable, 500);
    }

    /**
     * Removes the specified DummyModelVariable from the database.
     *
     * @param  \DummyFullModelClass  $DummyModelVariable
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(DummyModelClass $DummyModelVariable) {
        if (\Gate::denies('delete', $DummyModelVariable)) {
            abort(403);
        }

        if ($DummyModelVariable->delete()) {
            return response()->json($DummyModelVariable);
        }

        return response()->json($DummyModelVariable, 500);
    }

}

